Why do we need useEffect?
In React, when the component renders, you may need to perform some side tasks like fetching data, setting timers, subscribing to services, or manipulating the DOM.
Without useEffect, you would have needed class lifecycle methods like:
componentDidMount
componentDidUpdate
componentWillUnmount

ðŸ‘‰ With useEffect, you can handle all these lifecycle methods in one place!

âœ… 2. Real-Life Example of Side Effects
Example 1:
Imagine you open YouTube â†’ After 1 second, a notification appears (like "New Video Uploaded").
That side-effect of displaying a notification AFTER the page loads is handled using useEffect.


âœ… 3. Practical Example Using useEffect
ðŸ‘‰ Task: Create a counter that automatically updates the document title every time the count changes.